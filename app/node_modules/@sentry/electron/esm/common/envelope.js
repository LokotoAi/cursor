import { forEachEnvelopeItem } from '@sentry/utils';

/** Pulls an event and additional envelope items out of an envelope. Returns undefined if there was no event */
function eventFromEnvelope(envelope) {
    let event;
    const attachments = [];
    let profile;
    forEachEnvelopeItem(envelope, (item, type) => {
        if (type === 'event' || type === 'transaction' || type === 'feedback') {
            event = Array.isArray(item) ? item[1] : undefined;
        }
        else if (type === 'attachment') {
            const [headers, data] = item;
            attachments.push({
                filename: headers.filename,
                attachmentType: headers.attachment_type,
                contentType: headers.content_type,
                data,
            });
        }
        else if (type === 'profile') {
            profile = item[1];
        }
    });
    return event ? [event, attachments, profile] : undefined;
}

export { eventFromEnvelope };//# sourceMappingURL=https://cursor-sourcemaps.s3.amazonaws.com/sourcemaps/1649e229afdef8fd1d18ea173f063563f1e722e0/node_modules/@sentry/electron/esm/common/envelope.js.map
