import { getIsolationScope, getCurrentScope, mergeScopeData } from '@sentry/core';

/** Gets the merged scope data */
function getScopeData() {
    const scope = getIsolationScope().getScopeData();
    mergeScopeData(scope, getCurrentScope().getScopeData());
    scope.eventProcessors = [];
    return scope;
}
/** Hooks both current and isolation scope changes and passes merged scope on changes  */
function addScopeListener(callback) {
    getIsolationScope().addScopeListener((isolation) => {
        const merged = getScopeData();
        callback(merged, isolation);
    });
    getCurrentScope().addScopeListener((current) => {
        const merged = getScopeData();
        callback(merged, current);
    });
}

export { addScopeListener, getScopeData };//# sourceMappingURL=https://cursor-sourcemaps.s3.amazonaws.com/sourcemaps/1649e229afdef8fd1d18ea173f063563f1e722e0/node_modules/@sentry/electron/esm/common/scope.js.map
